

<h1>Find Outdoor Recreation Sites Near You!</h1>
<p>double click on map to add pin!</p>  
<div class="row">
  <div class="col-lg-6">
    <div class="input-group">
      
     
    </div>
  </div>
</div>

<!-- <script src="//maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=geometry" type="text/javascript"></script> -->
<script src="//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js" type="text/javascript"></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?libraries=places&sensor=false"></script>
<div>
  <div id="map" style='width:100%; height: 600px;'></div>
</div>

<script type="text/javascript">
  var allmarkers = [];
  var markerObjs = [];
  var userId = <%= @id %>;
  var visitedPins = "<%= @pinsVisited %>";
  //var pins_visited = <%= @pinsVisited %>; 
  handler = Gmaps.build('Google');
  handler.buildMap(
        { 
          provider: {
            mapTypeId:google.maps.MapTypeId.SATELLITE, 
            center:new google.maps.LatLng(39, -95), 
            zoom: 4
          }, 
          internal: {id: 'map'}
        }, 
      function(){
        var markers = [];
        
        
    google.maps.event.addListener(handler.getMap(), "dblclick", function(event){
          placeMarker(event.latLng);
        });
        
        
        
        //SEARCH CAPABILITY
   var input = /** @type {HTMLInputElement} */(
   document.getElementById('pac-input'));
   map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

   var searchBox = new google.maps.places.SearchBox(
    /** @type {HTMLInputElement} */(input));

  // [START region_getplaces]
  // Listen for the event fired when the user selects an item from the
  // pick list. Retrieve the matching places for that item.
  google.maps.event.addListener(searchBox, 'places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }
   

    // For each place, get the icon, place name, and location.
   
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0, place; place = places[i]; i++) {
      var image = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };
     
      bounds.extend(place.geometry.location);
    }

    map.fitBounds(bounds);
  });
        
        
        
        
    
        function placeMarker(latLng) {
        var marker = new google.maps.Marker({
          position: latLng, 
          map: handler.getMap(),
          draggable: true,
          animation: google.maps.Animation.DROP,
        });
        markers.push(marker);
        markerObjs.push(marker);
//         var newPinId;
//         if(markers.length === 0){
//           newPinId = 1;
//         }  
//         else {
//           var lastMarker = markers.length - 1;
//           newPinId = markers[lastMarker].id + 1;
//         }
//         $.get ("/pins/new", 
//          { pin:   {
//                     latitude: latLng.lat(),
//                      longitude: latLng.lng(),
//                      user_id: userId
//                  }
          
//             });
          
//           $.ajax({
//             url: '/pins/new',
//             type: 'get', 
//             data: { pin : {latitude: latLng.lat(),
//                      longitude: latLng.lng(),
//                            user_id: userId}},
//              success: function() {
//                //var thisId = <%= @pin.id %>
//                 }
            
//           });
          
          var infoWindow = new google.maps.InfoWindow();
          var a_type;
          if(this.activity_type){
           a_type = this.activity_type;
          }
          else{
           a_type = "click add more details to set activity type"
          }
          
          var html = '<br>Located in: ' + latLng + '<br><button type = "button" id="createPin" class="btn btn-primary">save pin</button>';
          infoWindow.setContent(html);
          infoWindow.open(handler.getMap(), marker);
         
          google.maps.event.addListener(infoWindow,'closeclick',function(){
             marker.setMap(null); //removes the marker
             // then, remove the infowindows name from the array
           });
           google.maps.event.addListener(handler.getMap(), "click", function(){
             marker.setMap(null); //removes the marker
             // then, remove the infowindows name from the array
           });
          infoWindow.set("user_id", this.user_id);
         
          google.maps.event.addListener(infoWindow, 'domready', function() {
           var newMarkers = <%= raw @hash.to_json %>
            
          $("#createPin").click(function(){
            $.ajax({
              //url: 'pin_create',
              type: 'post',
              data: { pin : {latitude: latLng.lat(),
                     longitude: latLng.lng(),
                           user_id: userId}},
               success: function() {
                 alert('thanks for adding this pin! please click on the pin to add a site name, activity type, and comments!');
              window.location = '/pins'
            }
            });
           
          });
            
          });//domready
         };//place marker func
    }); //close initialize func that builds map
  
      markers = <%= raw @hash.to_json %>                           

    // Loop through our array of markers & place each one on the map 
        //using reg google maps api, add click listener for infobox
       var infowindow = new google.maps.InfoWindow({ maxWidth: 600}); 
       var marker, i;
       var map = handler.getMap();
       showMarkers(map);

 

  
  function setAllMap(map){
      
    for( i = 0; i < markers.length; i++ ) {
        var position = markers[i];
        var id = markers[i].id;
      var address = markers[i].address;
        var activity_type = markers[i].activity_type;
      var user_id = markers[i].user_id;
      var lastComment;
      if(markers[i].comments[0]) {
       lastComment = markers[i].comments[0].content;
      }
      else{
        lastComment = "no comments yet";
      }
        marker = new google.maps.Marker({
            position: position,
            map: handler.getMap(),
          draggable: true,
          
         });
       marker.set("id",id);
      marker.set("activity_type", activity_type);
      marker.set("address", address);
      marker.set("user_id", user_id);
      marker.set("last_comment", lastComment);
      markerObjs.push(marker);
      
      
        // Allow each marker to have an info window  
        
    
        google.maps.event.addListener(marker, 'click', (function() {
           var a_type;
          if(this.activity_type){
           a_type = this.activity_type;
          }
          else{
           a_type = "no activity type yet";
          }
          
          
          
          
          var html =  '<b>Most Recent Comment: </b>' + this.last_comment + '<br><b>Activity Type: </b>' + a_type + '<br><b>Located in: </b>' + this.address + '</br><input type="checkbox" id="visitedCheckbox">&nbsp&nbspI have visited this site!<br><div class="btn-group" role="group"><button type = "button" id = "addComments" class="btn btn-primary">add/view comments</button><button type = "button" class="btn btn-primary" id="addDetails">edit site details</button><button type="button" class="btn btn-primary" id = "deletePin">remove this pin</button></div>'; 
          infowindow.setContent(html);
          infowindow.set("id", this.id);
          infowindow.set("user_id", this.user_id);
          
         
          google.maps.event.addListener(infowindow, 'domready', function() {
            var id = infowindow.id;
            
          $("#addComments").click(function(){
            $.ajax({
              url: "/pins/",
              type: 'get',
              data: {id: infowindow.id},
              success: function() {
                  window.location = "/pins/" + infowindow.id + "?method=get"
                }
            });
          });
            
          $("#deletePin").click(function(){ 
            if (userId === infowindow.user_id ) {
            $.ajax({
              url: "/pins/"+ infowindow.id,
              type: 'delete', 
              data: {id: infowindow.id},
            });
              event.preventDefault();
           
             findMarker(id).setMap(null);
            }
            else {
              alert("You didn't create this pin, so you cannot delete it. Please add comments!");
            }
          });
            
            $("#addDetails").click(function(){
              if(userId === infowindow.user_id) {
              $.ajax({
                url: "/pins/"+infowindow.id+"/edit",
                type: 'get',
                data: {id: infowindow.id},
                success: function() {
                  window.location = "/pins/" + infowindow.id + "/edit" 
                }
              })
              }
              else {
                alert("You didn't create this pin, so you can't add more details. Please add comments!");
              }
            });
            
            $("#visitedCheckbox").click(function(){
               visitedPins = visitedPins + ',' + infowindow.id;
              $.ajax({
                url: '/users/' + userId + '/updatePinsVisited/' + infowindow.id,
                type: 'put', 
                data: {pinId : infowindow.id},
              })
            });
         });//domready
          function findMarker(id){
          var theOne;
            for(i=0; i<markerObjs.length; i++){
              if (markerObjs[i].id == id){
                theOne = markerObjs[i];
              }
            }
            return theOne;
          }
          infowindow.open(handler.getMap(), this);
         }));
      google.maps.event.addListener(marker, "dragstart", function() {   
    infowindow.close();
    });
      
         google.maps.event.addListener(marker, 'dragend', function() {
              handler.getMap().HandleDragend(this.getPosition()) });
          }
      
      handler.getMap().HandleDragend = function(pos) {
          var geocoder = new google.maps.Geocoder();
          geocoder.geocode({
              latLng: pos
          }, function(responses) {
                if (responses && responses.length > 0) {
                    alert(responses[0].geometry.location);
                  $.ajax({
                    url: '/pins/' + marker.id,
                    type:'put',
                    data: {latitude: responses[0].geometry.location.k, longitude:   responses[0].geometry.location.A,
                          user_id: userId},
                    dataType: 'json'
                    });
                  } 
                else {
                  alert('Cannot determine address at this location.');
                  }
            
        });
        
      allmarkers = markerObjs;
        
    }
    
 
    //}
  }
 
  
 
 


                    
  

// Shows any markers currently in the array.
function showMarkers() {
  setAllMap(map);
}

  function filterPins() {
     var x = document.getElementById("activity_dropdown").value.toUpperCase();
   // x.toUpperCase();
    if(x === "SHOWALL") {
      setAllMap(map);
    }
    
    else if (x === "HIDEALL") {
       for( i = 0; i < markerObjs.length; i++ ) {
          markerObjs[i].setMap(null);
       }
    }
    else if (x === "MYMARKERS") {
       for (i = 0; i< markerObjs.length; i++) {
          if( markerObjs[i].user_id === userId){
            markerObjs[i].setMap(map);
          }
         else {
             markerObjs[i].setMap(null);
           }
       }
    }
    
    else if (x === "PINSVISITED") {
      for(i = 0; i< markerObjs.length; i++) {
        var n = visitedPins;
        var m = n.indexOf(markerObjs[i].id);
        if(m>-1){
          markerObjs[i].setMap(map);
        }
        else {
          markerObjs[i].setMap(null);
        }
      }
    }
    
    else {
        for( i = 0; i < markerObjs.length; i++ ) {
          var act = markerObjs[i].activity_type;
           if (act && x === act.toUpperCase()){
              markerObjs[i].setMap(map);
           }
           else {
             markerObjs[i].setMap(null);
           }
          }
    }
   }                     


       
       
  </script>   
                     
     
                     
                     
    
  <body>
    <div id="panel">
      <span>
        Select an activity type to filter pins on map: 
      <select id = "activity_dropdown" onchange = "filterPins();">
        <option value = "showAll">show all pins</option>
        <option value = "hideAll">hide all pins</option>
        <option value = "myMarkers">pins I've dropped</option>
        <option value = "pinsVisited">pins I've visited</option>
        <option value="climbing">climbing</option>
        <option value = "running">running</option>
        <option value = "hiking">hiking</option>
        <option value = "camping">camping</option>
        <option value = "biking">biking</option>
      </select>
      </span>
    </div>
    






  <body>
    <input id="pac-input" class="controls" type="text" placeholder="Search Box">
    
  </body>

